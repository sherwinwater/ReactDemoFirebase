{"version":3,"sources":["logo.svg","components/User.js","components/Home.js","components/Nav.js","App.js","components/Title.js","components/List.js","components/Photo.js","components/PhotoWall.js","components/Main.js","serviceWorker.js","index.js"],"names":["module","exports","User","props","state","users","books","proxyurl","fetch","then","response","json","data","console","log","setState","catch","error","status","headers","request","message","className","this","map","user","key","id","firstName","lastName","email","book","title","url","React","Component","Home","Nav","to","App","path","component","Title","Photo","post","src","imageLink","alt","description","onClick","onRemovePhoto","PhotoWall","posts","index","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","tasks","createElement","task","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.57bb5d71.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import Axios from 'axios';\nimport React from 'react';\nimport axios from 'axios';\n\nclass User extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            users: [],\n            books:[]\n        }\n    }\n\n\n    componentDidMount() {\n        const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n\n        const USERS_REST_API_URL = 'https://api.itbook.store/1.0/search/mongodb';\n        const USERS_REST_API_URL2 = 'https://sherwinebook.herokuapp.com/api/users';\n\n        // const USERS_REST_API_URL = 'http://localhost:8080/api/users';\n        // fetch(USERS_REST_API_URL)\n        fetch(proxyurl+USERS_REST_API_URL2)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data);\n                this.setState({\n                    users: data,\n                })\n            })\n            .catch(function (error) {\n                if (error.response) {\n                  // Request made and server responded\n                  console.log(error.response.data);\n                  console.log(error.response.status);\n                  console.log(error.response.headers);\n                } else if (error.request) {\n                  // The request was made but no response was received\n                  console.log(error.request);\n                } else {\n                  // Something happened in setting up the request that triggered an Error\n                  console.log('Error', error.message);\n                }\n            })\n\n        // axios.get(USERS_REST_API_URL)\n        // fetch(USERS_REST_API_URL, {mode:'cors'})\n        fetch(proxyurl+USERS_REST_API_URL)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data);\n                this.setState({\n                    books: data.books\n                })\n            })\n            .catch(function (error) {\n                if (error.response) {\n                  // Request made and server responded\n                  console.log(error.response.data);\n                  console.log(error.response.status);\n                  console.log(error.response.headers);\n                } else if (error.request) {\n                  // The request was made but no response was received\n                  console.log(error.request);\n                } else {\n                  // Something happened in setting up the request that triggered an Error\n                  console.log('Error', error.message);\n                }\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className=\"text-center\">Users List</h1>\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <td>User ID</td>\n                            <td>User First Name</td>\n                            <td>User Last Name</td>\n                            <td>User Email</td>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {\n                            this.state.users.map(\n                                user =>\n                                <tr key={user.id}>\n                                    <td>{user.id}</td>\n                                    <td>{user.firstName}</td>\n                                    <td>{user.lastName}</td>\n                                    <td>{user.email}</td>\n                                </tr>\n                            )\n                        }\n                    </tbody>\n                </table>\n\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <td>Book Titles</td>\n                            <td>Book Url</td>\n\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {\n                            this.state.books.map(\n                                book =>\n                                <tr key={book.title}>\n                                    <td>{book.title}</td>\n                                    <td>{book.url}</td>\n                                </tr>\n                            )\n                        }\n                    </tbody>\n                </table>\n\n            </div>\n        )\n    }\n\n}\nexport default User","import React from 'react';\n\nclass Home extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n\n    render() {\n        return (\n            <div>\n                hello\n            </div>\n        )\n    }\n\n}\nexport default Home","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nfunction Nav(){\n    \n    \n    return(\n        <nav>\n            <ul>\n                <Link to=\"/home\"><li> home </li></Link>\n                <Link to=\"/user\"><li> user </li></Link>\n            </ul>\n        </nav>\n    )\n}\n\n\nexport default Nav;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport User from './components/User';\nimport Home from './components/Home';\nimport Nav from './components/Nav';\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Nav />\n        <Switch>\n          <Route path=\"/user\" component={User} />\n          <Route path=\"/home\" component={Home} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React, {Component} from 'react';\n\nfunction Title(props){\n    return (\n      <h1>{props.title}</h1>\n    )\n}\n// class Title extends Component{\n//   render(){\n//     return (\n//       <h1>{this.props.title}</h1>\n//     )\n//   }\n// }\n\nexport default Title\n","import React, {Component} from 'react';\n\nclass List extends Component{\n  render(){\n    return (\n      <ol>\n      {this.props.tasklist.map((task, index) => <li key={index}> {task} </li>)}\n    </ol>\n    )\n  }\n}\n\nexport default List\n","import React, { Component } from 'react';\n\nfunction Photo(props) {\n    const post = props.post;\n\n    return <figure className=\"figure\">\n      <img className=\"image\" src={post.imageLink} alt={post.description}></img>\n      <figcaption><p>{post.description}</p></figcaption>\n      <button onClick={()=>{\n          props.onRemovePhoto(post);\n      }}>Remove</button>\n    </figure>\n}\n// class Photo extends Component {\n//   render() {\n//     const post = this.props.post;\n\n//     return <figure className=\"figure\">\n//       <img class=\"image\" src={post.imageLink} alt={post.description}></img>\n//       <figcaption><p>{post.description}</p></figcaption>\n//       <button>hello</button>\n//     </figure>\n//   }\n// }\n\nexport default Photo\n","import React, {Component} from 'react';\nimport Photo from './Photo';\n\nfunction PhotoWall(props){\n    return (\n      <div>\n      {props.posts.map((post, index) => <Photo key={index} post ={post} onRemovePhoto ={props.onRemovePhoto}/>)}\n    </div>\n    )\n}\n// class PhotoWall extends Component{\n//   render(){\n//     return (\n//       <div>\n//       {this.props.posts.map((post, index) => <Photo key={index} post ={post}/>)}\n//     </div>\n//     )\n//   }\n// }\n\nexport default PhotoWall\n","import React, { Component } from 'react';\nimport Title from './Title';\nimport List from './List';\nimport PhotoWall from './PhotoWall';\n\nconst posts = [{\n  id: \"0\",\n  description: \"landscripe\",\n  imageLink: \"https://images.pexels.com/photos/4558550/pexels-photo-4558550.jpeg\"\n}, {\n  id: \"1\",\n  description: \"hello kitty\",\n  imageLink: \"https://images.pexels.com/photos/3340298/pexels-photo-3340298.jpeg\"\n}, {\n  id: \"2\",\n  description: \"jim\",\n  imageLink: \"https://images.pexels.com/photos/4517375/pexels-photo-4517375.jpeg\"\n}]\n\nconst title = \"photowall\";\n\nclass Main extends Component {\n  constructor() {\n    super()\n    this.state = {\n      posts: []\n    }\n    this.removePhoto = this.removePhoto.bind(this)\n    console.log('construct')\n  }\n\n  removePhoto(postRemoved) {\n    console.log(postRemoved.description)\n    this.setState((state) => ({\n      posts: state.posts.filter(post => post != postRemoved)\n    }))\n  }\n\n  componentDidMount(){\n    const data = SimulateFetchFromDatabase()\n    this.setState({\n      posts:data\n    })\n    console.log('componentDidMount')\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    console.log('update1')\n    console.log(prevState.posts)\n    console.log(this.state)\n  }\n\n  render() {\n    console.log('render')\n    return <div>\n      <Title title={title} />\n      <PhotoWall posts={this.state.posts} onRemovePhoto={this.removePhoto} />\n    </div>\n\n  }\n}\n\n  function SimulateFetchFromDatabase() {\n  return [{\n    id: \"0\",\n    description: \"landscripe\",\n    imageLink: \"https://images.pexels.com/photos/4558550/pexels-photo-4558550.jpeg\"\n  }, {\n    id: \"1\",\n    description: \"hello kitty\",\n    imageLink: \"https://images.pexels.com/photos/3340298/pexels-photo-3340298.jpeg\"\n  }, {\n    id: \"2\",\n    description: \"jim\",\n    imageLink: \"https://images.pexels.com/photos/4517375/pexels-photo-4517375.jpeg\"\n  }]\n}\n\n\nexport default Main\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Main from './components/Main';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// exercise 1\nconst tasks = ['trash', 'shovel driveway', 'walk the dog'];\n\nconst element = React.createElement('ol', null,\n  tasks.map((task, index) => React.createElement('li', { key: index }, task)));\n\nconst element2 =\n  <section>\n    <h1>hello world</h1>\n    <ol>\n      {tasks.map((task, index) => <li key={index}> {task} </li>)}\n    </ol>\n  </section>\n\n// ReactDOM.render(element2, document.getElementById('root'));\n\n// exercise 2\n// class List extends Component{\n//   render(){\n//     return (\n//       <ol>\n//       {this.props.tasklist.map((task, index) => <li key={index}> {task} </li>)}\n//     </ol>\n//     )\n//   }\n// }\n\n// class Title extends Component{\n//   render(){\n//     return (\n//       <h1>{this.props.title}</h1>\n//     )\n//   }\n// }\n\n// class Main extends Component{\n//   render(){\n//     return <div>\n//       <Title title={'todos'}/>\n//       {/* <List /> */}\n//       {/* <List /> */}\n//       <List tasklist={['mow the lawn','dog']}/>\n//       <List tasklist={['hose the driveway','finish the laundry']}/>\n//     </div>\n    \n//   }\n// }\n\n// ReactDOM.render(<Main />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}